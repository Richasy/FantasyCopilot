<local:SettingSectionBase
    x:Class="FantasyCopilot.App.Controls.Settings.AISettingSection"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:controls="using:FantasyCopilot.App.Controls"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:ext="using:FantasyCopilot.App.Resources.Extension"
    xmlns:interfaces="using:FantasyCopilot.ViewModels.Interfaces"
    xmlns:labs="using:CommunityToolkit.Labs.WinUI"
    xmlns:local="using:FantasyCopilot.App.Controls.Settings"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d">

    <UserControl.Resources>
        <x:Double x:Key="SettingsCardWrapThreshold">280</x:Double>
        <x:Double x:Key="SettingsCardWrapNoIconThreshold">200</x:Double>
        <Thickness x:Key="SettingsExpanderItemPadding">24,8,24,8</Thickness>
    </UserControl.Resources>

    <labs:SettingsExpander Description="{ext:Locale Name=AISettingDescription}" Header="{ext:Locale Name=AISetting}">
        <labs:SettingsExpander.HeaderIcon>
            <controls:FluentIcon Symbol="ChatSettings" />
        </labs:SettingsExpander.HeaderIcon>

        <ComboBox
            x:Name="AISourceComboBox"
            MinWidth="120"
            SelectionChanged="OnAISourceComboBoxSelectionChanged">
            <ComboBoxItem Content="Azure Open AI" />
            <ComboBoxItem Content="Open AI" />
            <ComboBoxItem Content="{ext:Locale Name=Custom}" />
        </ComboBox>

        <labs:SettingsExpander.Items>

            <!--  Azure Open AI  -->
            <labs:SettingsCard
                HorizontalContentAlignment="Stretch"
                Header="{ext:Locale Name=AccessKey}"
                Visibility="{x:Bind ViewModel.IsAzureOpenAIShown, Mode=OneWay}">
                <PasswordBox
                    x:Name="AzureOpenAIAccessKeyBox"
                    Width="200"
                    Password="{x:Bind ViewModel.AzureOpenAIAccessKey, Mode=TwoWay}"
                    PlaceholderText="{ext:Locale Name=AccessKeyPlaceholderText}" />
            </labs:SettingsCard>
            <labs:SettingsCard
                HorizontalContentAlignment="Stretch"
                Header="{ext:Locale Name=Endpoint}"
                Visibility="{x:Bind ViewModel.IsAzureOpenAIShown, Mode=OneWay}">
                <TextBox
                    x:Name="AzureOpenAIEndpointBox"
                    Width="200"
                    PlaceholderText="{ext:Locale Name=EndpointPlaceholderText}"
                    Text="{x:Bind ViewModel.AzureOpenAIEndpoint, Mode=TwoWay}" />
            </labs:SettingsCard>
            <labs:SettingsCard
                HorizontalContentAlignment="Stretch"
                Header="{ext:Locale Name=ChatModelName}"
                Visibility="{x:Bind ViewModel.IsAzureOpenAIShown, Mode=OneWay}">
                <TextBox
                    Width="200"
                    PlaceholderText="{ext:Locale Name=ChatModelNamePlaceholderText}"
                    Text="{x:Bind ViewModel.AzureOpenAIChatModelName, Mode=TwoWay}" />
            </labs:SettingsCard>
            <labs:SettingsCard
                HorizontalContentAlignment="Stretch"
                Header="{ext:Locale Name=EmbeddingModelName}"
                Visibility="{x:Bind ViewModel.IsAzureOpenAIShown, Mode=OneWay}">
                <TextBox
                    Width="200"
                    PlaceholderText="{ext:Locale Name=EmbeddingModelNamePlaceholderText}"
                    Text="{x:Bind ViewModel.AzureOpenAIEmbeddingModelName, Mode=TwoWay}" />
            </labs:SettingsCard>
            <labs:SettingsCard
                HorizontalContentAlignment="Stretch"
                Header="{ext:Locale Name=TextCompletionModelName}"
                Visibility="{x:Bind ViewModel.IsAzureOpenAIShown, Mode=OneWay}">
                <TextBox
                    Width="200"
                    PlaceholderText="{ext:Locale Name=TextCompletionModelNamePlaceholderText}"
                    Text="{x:Bind ViewModel.AzureOpenAICompletionModelName, Mode=TwoWay}" />
            </labs:SettingsCard>

            <!--  Open AI  -->
            <labs:SettingsCard
                HorizontalContentAlignment="Stretch"
                Header="{ext:Locale Name=AccessKey}"
                Visibility="{x:Bind ViewModel.IsOpenAIShown, Mode=OneWay}">
                <PasswordBox
                    Width="200"
                    Password="{x:Bind ViewModel.OpenAIAccessKey, Mode=TwoWay}"
                    PlaceholderText="{ext:Locale Name=AccessKeyPlaceholderText}" />
            </labs:SettingsCard>
            <labs:SettingsCard
                HorizontalContentAlignment="Stretch"
                Description="{ext:Locale Name=ProxyWarning}"
                Header="{ext:Locale Name=ProxyEndpoint}"
                Visibility="{x:Bind ViewModel.IsOpenAIShown, Mode=OneWay}">
                <TextBox
                    Width="200"
                    PlaceholderText="{ext:Locale Name=EndpointPlaceholderText}"
                    Text="{x:Bind ViewModel.OpenAICustomEndpoint, Mode=TwoWay}" />
            </labs:SettingsCard>
            <labs:SettingsCard
                HorizontalContentAlignment="Stretch"
                Header="{ext:Locale Name=OptionalOrganization}"
                Visibility="{x:Bind ViewModel.IsOpenAIShown, Mode=OneWay}">
                <TextBox
                    Width="200"
                    PlaceholderText="{ext:Locale Name=OrganizationPlaceholderText}"
                    Text="{x:Bind ViewModel.OpenAIOrganization, Mode=TwoWay}" />
            </labs:SettingsCard>
            <labs:SettingsCard
                HorizontalContentAlignment="Stretch"
                Header="{ext:Locale Name=ChatModelName}"
                Visibility="{x:Bind ViewModel.IsOpenAIShown, Mode=OneWay}">
                <TextBox
                    Width="200"
                    PlaceholderText="{ext:Locale Name=ChatModelNamePlaceholderText}"
                    Text="{x:Bind ViewModel.OpenAIChatModelName, Mode=TwoWay}" />
            </labs:SettingsCard>
            <labs:SettingsCard
                HorizontalContentAlignment="Stretch"
                Header="{ext:Locale Name=EmbeddingModelName}"
                Visibility="{x:Bind ViewModel.IsOpenAIShown, Mode=OneWay}">
                <TextBox
                    Width="200"
                    PlaceholderText="{ext:Locale Name=EmbeddingModelNamePlaceholderText}"
                    Text="{x:Bind ViewModel.OpenAIEmbeddingModelName, Mode=TwoWay}" />
            </labs:SettingsCard>
            <labs:SettingsCard
                HorizontalContentAlignment="Stretch"
                Header="{ext:Locale Name=TextCompletionModelName}"
                Visibility="{x:Bind ViewModel.IsOpenAIShown, Mode=OneWay}">
                <TextBox
                    Width="200"
                    PlaceholderText="{ext:Locale Name=TextCompletionModelNamePlaceholderText}"
                    Text="{x:Bind ViewModel.OpenAICompletionModelName, Mode=TwoWay}" />
            </labs:SettingsCard>

            <!--  Custom AI  -->
            <labs:SettingsCard
                HorizontalAlignment="Stretch"
                Header="{ext:Locale Name=ConnectorHeader}"
                Visibility="{x:Bind ViewModel.IsCustomAIShown, Mode=OneWay}">
                <Button Command="{x:Bind ViewModel.ImportConnectorCommand}" Content="{ext:Locale Name=ImportConnector}" />
            </labs:SettingsCard>
            <labs:SettingsCard
                HorizontalAlignment="Stretch"
                Description="{ext:Locale Name=ConnectorManagerDescription}"
                Header="{ext:Locale Name=ConnectorManager}"
                Visibility="{x:Bind ViewModel.IsCustomAIShown, Mode=OneWay}">
                <StackPanel Orientation="Horizontal" Spacing="4">
                    <Button Style="{StaticResource IconButtonStyle}" ToolTipService.ToolTip="{ext:Locale Name=Detail}">
                        <controls:FluentIcon
                            FontSize="14"
                            Foreground="{ThemeResource AccentTextFillColorPrimaryBrush}"
                            Symbol="Info" />
                        <Button.Flyout>
                            <Flyout>
                                <StackPanel MaxWidth="280" Spacing="12">
                                    <TextBlock
                                        FontSize="12"
                                        FontStyle="Italic"
                                        Foreground="{ThemeResource TextFillColorPrimaryBrush}"
                                        Text="{x:Bind ViewModel.ConnectorFolderPath, Mode=OneWay}"
                                        TextWrapping="Wrap" />
                                    <TextBlock
                                        FontSize="12"
                                        Foreground="{ThemeResource TextFillColorPrimaryBrush}"
                                        Text="{ext:Locale Name=ConnectorManagerTip}"
                                        TextWrapping="Wrap" />
                                </StackPanel>
                            </Flyout>
                        </Button.Flyout>
                    </Button>
                    <Button
                        Command="{x:Bind ViewModel.OpenConnectorFolderCommand}"
                        Style="{StaticResource IconButtonStyle}"
                        ToolTipService.ToolTip="{ext:Locale Name=OpenFolder}">
                        <controls:FluentIcon FontSize="14" Symbol="FolderOpen" />
                    </Button>
                    <Button
                        Command="{x:Bind ViewModel.ChangeConnectorFolderCommand}"
                        Style="{StaticResource IconButtonStyle}"
                        ToolTipService.ToolTip="{ext:Locale Name=ChangeFolder}">
                        <controls:FluentIcon FontSize="14" Symbol="BoxArrowLeft" />
                    </Button>
                    <StackPanel Orientation="Horizontal">
                        <Button
                            Command="{x:Bind ViewModel.RefreshConnectorCommand}"
                            Style="{StaticResource IconButtonStyle}"
                            ToolTipService.ToolTip="{ext:Locale Name=Refresh}">
                            <controls:FluentIcon FontSize="14" Symbol="ArrowSync" />
                        </Button>
                        <ProgressRing
                            Width="20"
                            Height="20"
                            MinWidth="20"
                            MinHeight="20"
                            Margin="2,0,0,0"
                            VerticalAlignment="Center"
                            IsActive="{x:Bind ViewModel.IsConnectorRefreshing, Mode=OneWay}" />
                    </StackPanel>
                </StackPanel>
            </labs:SettingsCard>
            <labs:SettingsCard
                HorizontalAlignment="Stretch"
                Header="{ext:Locale Name=ChatModelName}"
                Visibility="{x:Bind ViewModel.IsCustomAIShown, Mode=OneWay}">
                <StackPanel Orientation="Horizontal">
                    <StackPanel Visibility="{x:Bind ViewModel.SelectedChatConnector, Mode=OneWay, Converter={StaticResource ObjectToVisibilityConverter}}">
                        <Button
                            Margin="0,0,4,0"
                            Command="{x:Bind ViewModel.SelectedChatConnector.OpenReadMeCommand, Mode=OneWay}"
                            Style="{StaticResource IconButtonStyle}"
                            ToolTipService.ToolTip="{ext:Locale Name=CheckReadMe}"
                            Visibility="{x:Bind ViewModel.SelectedChatConnector.HasReadMe, Mode=OneWay}">
                            <controls:FluentIcon FontSize="14" Symbol="Receipt" />
                        </Button>
                        <Button
                            Margin="0,0,4,0"
                            Command="{x:Bind ViewModel.SelectedChatConnector.OpenConfigCommand, Mode=OneWay}"
                            Style="{StaticResource IconButtonStyle}"
                            ToolTipService.ToolTip="{ext:Locale Name=OpenConfig}"
                            Visibility="{x:Bind ViewModel.SelectedChatConnector.HasConfig, Mode=OneWay}">
                            <controls:FluentIcon FontSize="14" Symbol="Options" />
                        </Button>
                    </StackPanel>
                    <ComboBox
                        MaxWidth="160"
                        VerticalAlignment="Center"
                        ItemsSource="{x:Bind ViewModel.ChatConnectors}"
                        SelectedItem="{x:Bind ViewModel.SelectedChatConnector, Mode=TwoWay}">
                        <ComboBox.ItemTemplate>
                            <DataTemplate x:DataType="interfaces:IConnectorConfigViewModel">
                                <TextBlock Text="{x:Bind DisplayName, Mode=OneWay}" TextTrimming="CharacterEllipsis" />
                            </DataTemplate>
                        </ComboBox.ItemTemplate>
                    </ComboBox>
                </StackPanel>
            </labs:SettingsCard>
        </labs:SettingsExpander.Items>
    </labs:SettingsExpander>
</local:SettingSectionBase>
